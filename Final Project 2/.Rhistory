train.weather.panel <- train.weather.panel %>%
group_by(interval60) %>% #na.omit() %>%
summarise(mean_delay = mean_delay,
total_departures = sum(train_count),
Temperature = mean(Temperature),
Precipitation = mean(Precipitation),
Wind_Gust = mean(Wind_Gust),
Visibility = mean(Visibility),
Wind_Speed = mean(Wind_Speed)) %>%
mutate(lag2Hours = dplyr::lag(mean_delay,2),
lag3Hours = dplyr::lag(mean_delay,3),
lag4Hours = dplyr::lag(mean_delay,4),
lag12Hours = dplyr::lag(mean_delay,12),
lag1day = dplyr::lag(mean_delay, 24),
lag1week = dplyr::lag(mean_delay, 168)) %>%
mutate_all(~replace(., is.na(.), 0))
# train.weather.panel[c("onestoplag", "twostoplag", "onestopearlieron", "twostopearlieron")][is.na(stoplag[c("onestoplag", "twostoplag", "onestopearlieron", "twostopearlieron")])] <- 0
#Lag by Station
stoplag <- dat_all %>%
group_by(train_id) %>% arrange(stop_sequence) %>%
mutate(onestoplag = dplyr::lag(delay_minutes),
twostoplag = dplyr::lag(delay_minutes,2)) %>%
ungroup() %>%
group_by(from, interval60) %>%
summarise(onestoplag = mean(onestoplag), twostoplag=mean(twostoplag)) %>%
mutate(onestopearlieron = dplyr::lag(onestoplag,1),
twostopearlieron = dplyr::lag(twostoplag,2)) %>%
dplyr::select(interval60, from, onestoplag, twostoplag,onestopearlieron, twostopearlieron)
stoplag[c("onestoplag", "twostoplag", "onestopearlieron", "twostopearlieron")][is.na(stoplag[c("onestoplag", "twostoplag", "onestopearlieron", "twostopearlieron")])] <- 0
train.weather.panel.lags.final <- left_join(train.weather.panel, stoplag, by=c( "interval60"))
table(train.weather.panel.lags.final$mean_delay)
# Final Panel Setup
panelnoGEOM <- train.weather.panel.lags.final %>%
mutate(Delay4_numeric = ifelse(mean_delay <= minutes(4), 0, 1),
Delay4 = ifelse(mean_delay <= minutes(4), "no", "yes"),
hour= hour(interval60),
daynumeric= wday(interval60),
week = week(interval60),
weekday = weekdays(interval60),
week_numeric = as.numeric(week))
panelnoGEOM <- panelnoGEOM %>%
mutate(STATION_ID = from)
panelGEOM <- merge(panelnoGEOM, NECstops, by.x="STATION_ID", by.y="STATION") %>%
st_as_sf(coords = c("LONGITUDE", "LATITUDE"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102711')
kable(summary(panelnoGEOM)) %>%
kable_styling()
#Option 1
numericVars <- train.weather.panel.lags.final %>% dplyr::select(is.numeric) %>% na.omit(na.action = "omit")
#Option 2
corrplot_num <- panelnoGEOM %>%
select(mean_delay, lag2Hours, Precipitation, Visibility) %>% na.omit(na.action = "omit")
# Error in cor(corrplot_num) : 'x' must be numeric
corrplot <- ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#260a03", "white", "#a81010"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation Across Numeric Variables",
caption = "Fig.3")+ plotTheme2()
set.seed(2121)
panelnoGEOMTrain <- filter(panelnoGEOM, week < 5)
panelnoGEOMTest <- filter(panelnoGEOM, week >= 5)
rbind(mutate(panelnoGEOMTrain, Legend = "Training"),
mutate(panelnoGEOMTest, Legend = "Testing")) %>%
group_by(Legend, interval60) %>%
summarise(mean_delay_minutes = mean(mean_delay)) %>%
ungroup() %>%
ggplot(aes(interval60, mean_delay_minutes, colour = Legend)) +
geom_line() +
scale_colour_manual(values = palette2) +
geom_vline(data = panelnoGEOM, aes(xintercept = week_numeric)) +
labs(title="NJ Transit Rail Trips by Week",
subtitle="January-February 2021",
x="Week", y="Mean Delay Minutes",
caption = "Figure 4.1") +
#plotTheme() +
theme(panel.grid.major = element_blank())
Model1 <- lm(mean_delay ~ lag2Hours + lag3Hours + lag4Hours + lag12Hours + onestoplag + twostoplag, data=panelnoGEOMTrain)
summary(Model1)
Model2 <- lm(mean_delay ~ Temperature + Precipitation + Wind_Gust + Visibility + lag2Hours + lag3Hours + lag4Hours + lag12Hours + onestoplag + twostoplag, data=panelnoGEOMTrain)
summary(Model2)
#Best Model
Model3 <- lm(mean_delay ~ total_departures + Temperature + Precipitation + Wind_Gust + Wind_Speed + Visibility + lag2Hours + lag3Hours + lag4Hours + lag12Hours + onestoplag + twostoplag,  data=panelnoGEOMTrain)
summary(Model3)
stargazer(Model1, type="text", title="Regression Results", font.size = "small", single.row = TRUE)
stargazer(Model2, type="text", title="Regression Results", font.size = "small", single.row = TRUE)
stargazer(Model3, type="text", title="Regression Results", font.size = "small", single.row = TRUE)
# predict function
model_pred <- function(dat, fit)
{
pred <- predict(fit, newdata = dat)}
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
tidyr::nest()
#nest(-week)
#predictions
week_predictions <-
panelnoGEOMTest.weekNest %>%
mutate(ATimeLag_FE = map(.x = data, fit = Model1, .f = model_pred),
BTimeLag_Space_FE = map(.x = data, fit = Model2, .f = model_pred),
CTimeLag_SpaceLag_FE = map(.x = data, fit = Model3, .f = model_pred)) %>%
gather(Regression, Prediction, -data, -week) %>%
mutate(Observed = map(data, pull, delay_minutes),
Absolute_Error = map2(Observed, Prediction,  ~ abs(.x - .y)),
MAE = map_dbl(Absolute_Error, mean, na.rm = TRUE),
sd_AE = map_dbl(Absolute_Error, sd, na.rm = TRUE))
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
nest(-week)
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest)
View(panelnoGEOMTest.weekNest)
??nest
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
tidyr::nest()
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
tidyr::nest(week)
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
tidyr::nest(-week)
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
tidyr::nest(data = c(interval60, mean_delay, total_departures,
Temperature,Precipitation,
Wind_Gust, Visibility, Wind_Speed, lag2Hours, lag3Hours,
lag4Hours, lag12Hours, lag1day, lag1week, from, onestoplag,
twostoplag, onestopearlieron, twostopearlieron, Delay4_numeric,
Delay4, hour, daynumeric, weekday, week_numeric, STATION_ID))
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>%
View(panelnoGEOMTest)
tidyr::nest(data = c(week))
??tidyr::nest
View(panelnoGEOMTest)
panelnoGEOMTest.weekNest <- panelnoGEOMTest %>% nest(data = c(week, weekday, mean_delay))
View(panelnoGEOMTest)
panelnoGEOMTest.weekNest <- panelnoGEOMTest %>% nest(data = c(week, mean_delay))
panelnoGEOMTest.weekNest <- panelnoGEOMTest %>% nest(data = c(week))
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>% nest(data = c(week))
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>% tidyr::nest(data = c(week))
View(panelnoGEOMTest.weekNest)
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>% tidyr::nest(data = c(-week))
panelnoGEOMTest.weekNest <- as.data.frame(panelnoGEOMTest) %>% tidyr::nest(data = c(week))
panelnoGEOMTest.weekNest <- panelnoGEOMTest %>%
group_by(week) %>%
tidyr::nest()
View(panelnoGEOMTest.weekNest)
panelnoGEOMTest.weekNest <- panelnoGEOMTest %>%
group_by(week)
panelnoGEOMTest.weekNest <- panelnoGEOMTest %>%
group_by(week) %>%
tidyr::nest()
week_predictions <-
panelnoGEOMTest.weekNest %>%
mutate(ATimeLag_FE = map(.x = data, fit = Model1, .f = model_pred),
BTimeLag_Space_FE = map(.x = data, fit = Model2, .f = model_pred),
CTimeLag_SpaceLag_FE = map(.x = data, fit = Model3, .f = model_pred)) %>%
gather(Regression, Prediction, -data, -week) %>%
mutate(Observed = map(data, pull, mean_delay),
Absolute_Error = map2(Observed, Prediction,  ~ abs(.x - .y)),
MAE = map_dbl(Absolute_Error, mean, na.rm = TRUE),
sd_AE = map_dbl(Absolute_Error, sd, na.rm = TRUE))
View(week_predictions)
View(week_predictions)
View(panelnoGEOMTest.weekNest)
View(panelnoGEOMTest.weekNest)
View(panelnoGEOMTest.weekNest)
week_predictions <-
panelnoGEOMTest.weekNest %>%
mutate(ATimeLag_FE = map(.x = data, fit = Model1, .f = model_pred),
BTimeLag_Space_FE = map(.x = data, fit = Model2, .f = model_pred),
CTimeLag_SpaceLag_FE = map(.x = data, fit = Model3, .f = model_pred)) %>%
gather(Regression, Prediction, -data, -week) %>%
mutate(Observed = map(data, pull, mean_delay),
Absolute_Error = map2(Observed, Prediction,  ~ abs(.x - .y)),
MAE = map_dbl(Absolute_Error, mean, na.rm = TRUE),
sd_AE = map_dbl(Absolute_Error, sd, na.rm = TRUE))
week_predictions %>%
dplyr::select(Regression, MAE, week) %>%
gather(Variable, MAE, -Regression, -week) %>%
ggplot(aes(week, MAE)) +
geom_bar(aes(fill = Regression), position = "dodge", stat="identity") +
scale_fill_manual(values = palette5) +
labs(title = "Mean Absolute Errors (MAE) by model specification and week",
caption="Figure 4.2") +
plotTheme()
week_predictions %>%
dplyr::select(Regression, MAE, week) %>%
gather(Variable, MAE, -Regression, -week) %>%
ggplot(aes(week, MAE)) +
geom_bar(aes(fill = Regression), position = "dodge", stat="identity") +
scale_fill_manual(values = palette6) +
labs(title = "Mean Absolute Errors (MAE) by model specification and week",
caption="Figure 4.2") +
plotTheme()
week_predictions %>%
dplyr::select(Regression, MAE, week) %>%
gather(Variable, MAE, -Regression, -week) %>%
ggplot(aes(week, MAE)) +
geom_bar(aes(fill = Regression), position = "dodge", stat="identity") +
scale_fill_manual(values = palette6) +
labs(title = "Mean Absolute Errors (MAE) by model specification and week",
caption="Figure 4.2") +
plotTheme2()
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station_id = map(data, pull, start_station)) %>%
dplyr::select(interval60, from_station_id, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station_id) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 1.1) +
scale_color_manual(values = palette2)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
View(panelnoGEOMTest)
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 1.1) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.75) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.5) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.6) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
View(week_predictions)
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.6) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
week_predictions %>%
dplyr::select(Regression, MAE, week) %>%
gather(Variable, MAE, -Regression, -week) %>%
ggplot(aes(week, MAE)) +
geom_bar(aes(fill = Regression), position = "dodge", stat="identity") +
scale_fill_manual(values = palette6) +
labs(title = "Mean Absolute Errors (MAE) by model specification and week",
caption="Figure 4.2") +
plotTheme2()
week_predictions %>%
dplyr::select(Regression, MAE, week) %>%
gather(Variable, MAE, -Regression, -week) %>%
ggplot(aes(week, MAE)) +
geom_bar(aes(fill = Regression), position = "dodge", stat="identity") +
scale_fill_manual(values = palette2) +
labs(title = "Mean Absolute Errors (MAE) by model specification and week",
caption="Figure 4.2") +
plotTheme2()
week_predictions %>%
dplyr::select(Regression, MAE, week) %>%
gather(Variable, MAE, -Regression, -week) %>%
ggplot(aes(week, MAE)) +
geom_bar(aes(fill = Regression), position = "dodge", stat="identity") +
scale_fill_manual(values = palette7) +
labs(title = "Mean Absolute Errors (MAE) by model specification and week",
caption="Figure 4.2") +
plotTheme2()
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.6) +
scale_color_manual(values = palette7)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
#Observed vs Predicted
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.6) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
#Observed vs Predicted
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
from_station = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, from_station, Observed, Prediction, Regression) %>%
unnest() %>%
na.omit() %>%
gather(Variable, Value, -Regression, -interval60, -from_station, -week) %>%
group_by(Regression, Variable, interval60) %>%
summarize(Value = sum(Value)) %>%
ggplot(aes(interval60, Value, colour=Variable)) +
geom_line(size = 0.6) +
scale_color_manual(values = palette6)+
facet_wrap(~Regression, ncol=1) +
labs(title = "Predicted/Observed NJ Train Delays", x = "Hour", y= "Station") +
plotTheme2()
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
start_station = map(data, pull, STATION_ID)) %>%
#start_lat = map(data, pull, start_lat),
#start_lon = map(data, pull, start_lon)) %>%
select(interval60, start_station, Observed, Prediction, Regression) %>%
unnest() %>%
filter(Regression == "CTimeLag_SpaceLag_FE") %>%
#group_by(start_station, start_lat, start_lon) %>%
summarize(MAE = mean(abs(Observed-Prediction), na.rm = TRUE))%>%
ggplot(.)+
geom_sf(data = njCensus, color = "grey")+
geom_sf(aes(color = MAE),
fill = "transparent", alpha = 1)+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "C")+
ylim(min(indego_census$start_lat), max(indego_census$start_lat))+
xlim(min(indego_census$start_lon), max(indego_census$start_lon))+
labs(title="Mean Absolute Error for Model E",
subtitle="Test Set")+
mapTheme2()
View(njCensus)
week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
start_station = map(data, pull, STATION_ID)) %>%
#start_lat = map(data, pull, start_lat),
#start_lon = map(data, pull, start_lon)) %>%
select(interval60, start_station, Observed, Prediction, Regression) %>%
unnest() %>%
filter(Regression == "CTimeLag_SpaceLag_FE") %>%
#group_by(start_station, start_lat, start_lon) %>%
summarize(MAE = mean(abs(Observed-Prediction), na.rm = TRUE))%>%
ggplot(.)+
geom_sf(data = njCensus, color = "grey")+
geom_sf(aes(color = MAE),
fill = "transparent", alpha = 1)+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "C")+
labs(title="Mean Absolute Error for Model E",
subtitle="Test Set")+
mapTheme2()
View(stations.sf)
View(stations.sf)
geom_sf(data = (week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
to = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, to, Observed, Prediction, Regression, -week) %>%
unnest(cols = c(interval60, to, Observed, Prediction)) %>%
#filter(Regression %in% c("DTime_Space_FE_timeLags")) %>%
group_by(interval60, Regression, to) %>%
summarize(MAE = mean(abs(Observed-Prediction), na.rm = TRUE))%>%
left_join(stations.sf, by = c("to" = "STATION")) %>%
st_as_sf()),
aes(color = MAE, geometry=geometry)) +
scale_color_gradient(high = "#f95738", low = "#fabbaf", limits = c(0, 0.4), na.value="#f0f0f0") +
facet_wrap(~Regression, ncol=4) +
labs(title="Mean Absolute Errors (MAE) of Test Set by Model",
#subtitle="4 Regression Models",
caption = "Figure 4.4") +
mapTheme()
ggplot() +
geom_sf(data = njCensus, fill="transparent", color = "grey") +
geom_sf(data = (week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
to = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, to, Observed, Prediction, Regression, -week) %>%
unnest(cols = c(interval60, to, Observed, Prediction)) %>%
#filter(Regression %in% c("DTime_Space_FE_timeLags")) %>%
group_by(interval60, Regression, to) %>%
summarize(MAE = mean(abs(Observed-Prediction), na.rm = TRUE))%>%
left_join(stations.sf, by = c("to" = "STATION")) %>%
st_as_sf()),
aes(color = MAE, geometry=geometry)) +
scale_color_gradient(high = "#f95738", low = "#fabbaf", limits = c(0, 0.4), na.value="#f0f0f0") +
facet_wrap(~Regression, ncol=4) +
labs(title="Mean Absolute Errors (MAE) of Test Set by Model",
#subtitle="4 Regression Models",
caption = "Figure 4.4") +
mapTheme()
ggplot() +
geom_sf(data = njCensus, fill="transparent", color = "grey") +
geom_sf(data = (week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
to = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, to, Observed, Prediction, Regression, -week) %>%
unnest(cols = c(interval60, to, Observed, Prediction)) %>%
#filter(Regression %in% c("DTime_Space_FE_timeLags")) %>%
group_by(interval60, Regression, to) %>%
summarize(MAE = mean(abs(Observed-Prediction), na.rm = TRUE))%>%
left_join(stations.sf, by = c("to" = "STATION")) %>%
st_as_sf()),
aes(color = MAE, geometry=geometry)) +
scale_color_gradient(high = "#f95738", low = "#fabbaf", limits = c(0, 0.4), na.value="#f0f0f0") +
facet_wrap(~Regression, ncol=4) +
labs(title="Mean Absolute Errors (MAE) of Test Set by Model",
#subtitle="4 Regression Models",
caption = "Figure 4.4") +
mapTheme2()
ggplot() +
geom_sf(data = njCensus, fill="transparent", color = "grey") +
geom_sf(data = (week_predictions %>%
mutate(interval60 = map(data, pull, interval60),
to = map(data, pull, STATION_ID)) %>%
dplyr::select(interval60, to, Observed, Prediction, Regression, -week) %>%
unnest(cols = c(interval60, to, Observed, Prediction)) %>%
#filter(Regression %in% c("DTime_Space_FE_timeLags")) %>%
group_by(interval60, Regression, to) %>%
summarize(MAE = mean(abs(Observed-Prediction), na.rm = TRUE))%>%
left_join(stations.sf, by = c("to" = "STATION")) %>%
st_as_sf()), aes(color = MAE, geometry=geometry)) +
scale_color_gradient(high = "#f95738", low = "#fabbaf", limits = c(0, 0.2), na.value="#f0f0f0") +
facet_wrap(~Regression, ncol=4) +
labs(title="Mean Absolute Errors (MAE) of Test Set by Model",
#subtitle="4 Regression Models",
caption = "Figure 4.4") +
mapTheme2()
ppm_validation <- week_predictions %>%
#mutate(delay_minutes = map(data, pull, delay_minutes)) %>%
dplyr::select(Observed, Prediction, Regression, -week) %>%
unnest(cols = c(Observed, Prediction)) %>%
filter(Regression %in% c("C Time_Space_FE_timeLags"))  %>%
mutate(ppm_5 = ifelse(Observed < 5, "1", "0"),
ppm_10 = ifelse(Observed < 10, "1", "0"),
ppm_20 = ifelse(Observed < 20, "1", "0"),
ppm_20plus = ifelse(Observed >= 20, "1", "0"))
View(ppm_validation)
View(week_predictions)
View(panelnoGEOMTest.weekNest)
View(week_predictions)
glimpse(week_predictions)
View(weather)
View(dat_all)
ggarrange(p1, widths = c(2,1.5))
p1 <-  dat1 %>%
select(tod_1, delay_minutes) %>%
group_by(tod_1) %>%
summarise(mean_delay = mean(delay_minutes)) %>%
ggplot(aes(x = tod_1, y=mean_delay)) +
geom_bar(stat="identity", fill="#5F63AD", alpha=0.7) +
labs(x = "",
y = "Average Delay Minutes",
title = "Mean Delay Minutes by Different Time",
fill = "Time") +
plotTheme2()
ggarrange(p1, widths = c(2,1.5))
